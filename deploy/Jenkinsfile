  pipeline {
  agent any

  environment {
    ANSIBLE_CONFIG="${WORKSPACE}/deploy/ansible.cfg"
    ANSIBLE_HOST_KEY_CHECKING = 'False'
  }

  stages {
    stage("Initial cleanup") {
      steps {
        dir("${WORKSPACE}") {
          deleteDir()
        }
      }
    }

    stage('Checkout SCM') {
      steps {
        git branch: 'main', url: 'https://github.com/zakircmt/ansible-config-mgt.git'
      }
    }

    stage('Prepare Ansible For Execution') {
      steps {
        sh 'echo ${WORKSPACE}'
        sh 'sed -i "3 a roles_path=${WORKSPACE}/roles" ${WORKSPACE}/deploy/ansible.cfg'
      }
    }

    stage('Test SSH Connection') {
      steps {
        sshagent(['private-key']) {
          sh 'ssh -o StrictHostKeyChecking=no -i /home/ubuntu/.ssh/my-server-key.pem ec2-user@172.31.46.107 exit'
        }
      }
    }

    stage('Run Ansible playbook') {
      steps {
        sshagent(['private-key']) {
          ansiblePlaybook(
            become: true,
            credentialsId: 'private-key',
            disableHostKeyChecking: true,
            installation: 'ansible',
            inventory: "${WORKSPACE}/inventory/dev.yml",
            playbook: "${WORKSPACE}/playbooks/site.yml"
          )
        }
      }
    }

    stage('Clean Workspace after build') {
      steps {
        cleanWs(cleanWhenAborted: true, cleanWhenFailure: true, cleanWhenNotBuilt: true, cleanWhenUnstable: true, deleteDirs: true)
      }
    }
  }
}
